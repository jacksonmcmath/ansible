- name: Add non-free repository
  ansible.builtin.apt_repository:
    repo: deb http://deb.debian.org/debian bookworm main non-free
    state: present

- name: Create install directory
  ansible.builtin.file:
    path: "{{ sabnzbd_install_dir }}"
    owner: "{{ sabnzbd_user.name }}"
    group: "{{ sabnzbd_user.name }}"
    mode: u=rwx,g=rx,o=rx
    state: directory

- name: Install dependencies
  ansible.builtin.apt:
    name: "{{ sabnzbd_dependencies }}"
    state: present

- name: Download and install release
  ansible.builtin.unarchive:
    src: "{{ sabnzbd_download_url }}"
    dest: "{{ sabnzbd_install_dir }}"
    remote_src: true
    extra_opts:
      - "--strip-components=1"
    owner: "{{ sabnzbd_user.name }}"
    group: "{{ sabnzbd_user.name }}"
    mode: u=rwx,g=rx,o=rx

- name: Install sabnzbd requirements
  ansible.builtin.pip:
    requirements: "{{ sabnzbd_install_dir }}/requirements.txt"
    virtualenv: "{{ sabnzbd_install_dir }}/venv"
    virtualenv_command: python3 -m venv

- name: Install sabctools
  ansible.builtin.pip:
    name: sabctools
    virtualenv: "{{ sabnzbd_install_dir }}/venv"
    virtualenv_command: python3 -m venv

- name: Create configuration directory
  ansible.builtin.file:
    path: "{{ sabnzbd_config_dir }}"
    owner: "{{ sabnzbd_user.name }}"
    group: "{{ sabnzbd_user.name }}"
    mode: u=rwx,g=rx,o=rx
    state: directory

- name: Create configuration file
  ansible.builtin.file:
    name: "{{ sabnzbd_config_dir }}/sabnzbd.ini"
    owner: "{{ sabnzbd_user.name }}"
    group: "{{ sabnzbd_user.name }}"
    mode: u=rw,g=r,o=r
    modification_time: preserve
    state: touch

- name: Create systemd service
  ansible.builtin.template:
    src: sabnzbd.service.j2
    dest: /etc/systemd/system/sabnzbd.service
    owner: root
    group: root
    mode: u=rw,g=r,o=r

- name: Start sabnzbd service
  ansible.builtin.systemd:
    name: sabnzbd.service
    state: started
    enabled: true
    daemon_reload: true
